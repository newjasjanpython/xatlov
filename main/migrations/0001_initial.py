# Generated by Django 5.0 on 2024-01-11 22:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cadmin', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MembersInForeignModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('jqfJ4u', models.CharField(max_length=256, verbose_name='fullname of civil')),
                ('GWUmHY', models.DateField(verbose_name='birthday of civil')),
                ('KzVEbd', models.TextField(verbose_name='purpose for being in foreign')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MembersInSomeNotebookModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('A3TP8D', models.CharField(max_length=256, verbose_name='fullname of civil')),
                ('aiJCTv', models.CharField(choices=[('metal', 'Темир дафтар'), ('famales', 'Аёллар дафтари'), ('youth', 'Ёшлар дафтари')], max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemSheetModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mStccp', models.CharField(max_length=256, verbose_name='fullname of civil')),
                ('dPmVJI', models.DateField(verbose_name='birthday of civil')),
                ('jZ4ndH', models.TextField(verbose_name='appeal description or text')),
                ('Ue07qV', models.CharField(blank=True, max_length=256, null=True, verbose_name='appeal level code')),
                ('Cq04qZ', models.CharField(blank=True, max_length=256, null=True, verbose_name='organization for appeal')),
                ('dgWV6p', models.DateField(blank=True, null=True, verbose_name='deadline for appeal')),
                ('x2tBdd', models.PositiveIntegerField(default=412, verbose_name='appeal status')),
                ('dIyvXl', models.TextField(blank=True, null=True, verbose_name='appeal solution thanks')),
                ('vKlZ9t', models.FileField(blank=True, null=True, upload_to='pdf/', verbose_name='appeal solution thanks [file]')),
            ],
        ),
        migrations.CreateModel(
            name='AppealSheetModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sWqfd7', models.DateField(auto_now_add=True)),
                ('OrTY1z', models.CharField(max_length=256, verbose_name='house address')),
                ('uhz0cN', models.CharField(choices=[('T5Zrii', 'биринчи тоифа (кам таъминланган, эхтиёжманд ва даромади паст хонадонлар.)'), ('fDXevW', 'иккинчи тоифа (доимий даромадга эга, қўшимча даромад топиш истагидаги хонадонлар.)'), ('KpaP31', 'учинчи тоифа (иқтисодий аҳволи яхши ва ўзига тўқ хонадонлар.)')], max_length=256, verbose_name='house economic and social position')),
                ('NDoqjy', models.BooleanField(default=False, verbose_name='house problems')),
                ('hB7sSi', models.CharField(max_length=256, verbose_name='applicant fio')),
                ('pcPMf0', models.DateField(verbose_name='applicant birthday')),
                ('MsaQKr', models.PositiveIntegerField(choices=[(1, 'Эркак'), (2, 'Аёл')], verbose_name='applicant gender')),
                ('lXV0Ax', models.CharField(max_length=256, verbose_name='applicant contact')),
                ('wplJMW', models.BooleanField(default=False, verbose_name='need energy efficient equipment')),
                ('Lwo3mi', models.PositiveIntegerField(blank=True, choices=[(1, 'Ўз маблағига'), (2, 'Имтиёзли кредитга')], null=True, verbose_name='energy efficient equipment installation budget')),
                ('kbuia9', models.PositiveIntegerField(default=0, verbose_name='energy efficient equipment kw')),
                ('wLVuSe', models.BooleanField(default=False, verbose_name='request for a loan')),
                ('VANCTz', models.PositiveBigIntegerField(default=0, verbose_name='load sum paid')),
                ('OA0yaU', models.PositiveIntegerField(blank=True, choices=[(1, 'Аёллар'), (2, 'Ёшлар')], null=True, verbose_name='requester gender')),
                ('kYeOx4', models.TextField(blank=True, null=True, verbose_name='request purpose')),
                ('V0djcq', models.BooleanField(default=False, verbose_name='demand subsidy')),
                ('kwsAGh', models.PositiveIntegerField(blank=True, choices=[(1, 'Аёллар'), (2, 'Ёшлар')], null=True, verbose_name='demanding gender')),
                ('quTj0L', models.TextField(blank=True, max_length=256, null=True, verbose_name='demand purpose')),
                ('cAdagL', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='VXE6it', to='cadmin.mfymodel')),
                ('fA0b7j', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='XtYo0K', to='cadmin.districtmodel')),
                ('L3iXGb', models.ManyToManyField(blank=True, to='main.membersinforeignmodel')),
                ('d0Gawy', models.ManyToManyField(blank=True, to='main.membersinsomenotebookmodel')),
                ('m9GgHo', models.ManyToManyField(blank=True, to='main.problemsheetmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
